#! /usr/bin/perl
use Try::Tiny;
use CGI;
use CGI::Carp qw( fatalsToBrowser );
use JSON::XS;
use File::Slurp qw( read_file );
use Data::Structure::Util qw( unbless );
use List::MoreUtils qw( first_index );
use Clone qw( clone );
use Data::Dumper;

use lib qw( /usr/local/freescore/lib );
use FreeScore::Forms::WorldClass;

my $cgi        = new CGI();
my $results    = undef;
my $tournament = read_tournament_config();
my $ring       = $cgi->param( 'ring' );
my $divid      = $cgi->param( 'divid' );
my @rounds     = ($cgi->param( 'round' ));
my $json       = new JSON::XS();

my @divisions  = ();
my $results    = undef;

print $cgi->header();
try {
	if( defined $ring ) {
		if( defined $divid ) { 
			$results = new FreeScore::Forms::WorldClass( $tournament->{ db }, $ring );
			push @divisions, grep { $_->{ name } eq $divid } @{ $results->{ divisions }};

		} else {
			$results = new FreeScore::Forms::WorldClass( $tournament->{ db }, $ring );
			push @divisions, @{ $results->{ divisions }};
		}
	} else {
		foreach my $ring ( @{$tournament->{ rings }} ) {
			next if $ring >= 4; # MW
			$results = new FreeScore::Forms::WorldClass( $tournament->{ db }, $ring );
			push @divisions, @{ $results->{ divisions }};
		}
	}
} catch {
	die $_;
	
};

@divisions = sort { $a->{ name } cmp $b->{ name } } @divisions;

print <<EOF;
<html>
	<head>
		<title>World Class Points by NOC</title>
		<style type="text/css">
			body {
				font-family: Optima;
			}
			.division {
				clear: both;
				margin-top: 28px;
				width: 920px;
				height: 20px;
			}
			.division .description {
				float: left;
			}
			.division .round {
				float: right;
			}
			.results {
				page-break-inside: avoid;
			}
			.results table {
				width: 410px;
				margin-left: auto;
				margin-right:auto;
			}
			.results th {
				margin-top: 8px;
				border-top: 1px solid #999;
				border-bottom: 1px solid #999;
				padding: 0 4px 0 4px;
				text-align: left;
			}
			.results td       { padding: 2px 4px 2px 4px; }
			.results .number  { width: 37px; text-align:center; }
			.results .noc     { width: 63px; }
			.results .athlete { width: 275px; }
			.results .form, .results .score, .results .place { width: 88px; text-align: center; }
			.results .preacc { font-size: 8pt; }
			.results .tiebreaker { width: 40px; text-align: center; }
			.results .notes  { font-size: 9pt; width: 40px; }
			.results tr:nth-child( even ) { background: #fff; }
			.results tr:nth-child( odd  ) { background: #eee; }
			.results tr:nth-child( even ) td { border-bottom: 1px solid #fff; }
			.results tr:nth-child( odd  ) td { border-bottom: 1px solid #eee; }
			.results .footer-img { position: absolute; bottom: 0; width: 920px; }

		</style>
	</head>
	<body>
EOF


my $nocpoints    = {};

foreach my $division (@divisions) {
	my $name   = uc $division->{ name };
	my $round  = 'finals';
	my ($num)  = $division->{ name } =~ /r(\d+)/;

	next unless exists $division->{ order }{ $round };
	# next if $num > 100; #HACKY - SHOULD REALLY REMOVE THIS
	$division->place_athletes( $round );

	my @results = ();
	foreach my $i (0 .. 3) {
		next if $i > $#{$division->{ placement }{ $round }};
		my $place    = $i + 1;
		my $j        = $division->{ placement }{ $round }[ $i ]; next unless defined( $j );
		my $athlete  = unbless( clone( $division->{ athletes }[ $j ]));
		my $noc      = $athlete->{ info }{ noc };
		my $points   = { 1 => 5, 2 => 3, 3 => 1 };
		$place = 3 if $place == 4;

		$nocpoints->{ $noc }{ $place }++;
		$nocpoints->{ $noc }{ total } += $points->{ $place };
	}
}

print <<EOF;
<div class="results">
<img src="/images/branding/header-2.png">
<table border=0 cellpadding=0 cellspacing=0>
    <tr>
        <th class="noc">NOC</th>
        <th class="score">Gold</th>
        <th class="score">Silver</th>
        <th class="score">Bronze</th>
        <th class="score">Points</th>
    </tr>
EOF
foreach my $noc (sort { $nocpoints->{ $b }{ total } <=> $nocpoints->{ $a }{ total } || $nocpoints->{ $b }{ 1 } <=> $nocpoints->{ $a }{ 1 } || $nocpoints->{ $b }{ 2 } <=> $nocpoints->{ a }{ 2 } || $nocpoints->{ $b }{ 3 } <=> $nocpoints->{ $a }{ 3 } || $a cmp $b } keys %$nocpoints) {
	printf "<tr><td class=\"noc\">%-3s</td><td class=\"number\">%d</td><td class=\"number\">%d</td><td class=\"number\">%d</td><td class=\"number\">%d</td></tr>\n", $noc, $nocpoints->{ $noc }{ 1 }, $nocpoints->{ $noc }{ 2 }, $nocpoints->{ $noc }{ 3 }, $nocpoints->{ $noc }{ total };
}
print <<EOF;
</table>
<img class="footer-img" src="/images/branding/footer-2.png">
</div>

EOF

# ============================================================
sub ordinal {
# ============================================================
	my $n = shift;
	my $d = $n % 10;
	if( $n >= 11 && $n <= 13 ) { return $n . 'th'; }
	elsif( $d == 1 )           { return $n . 'st'; }
	elsif( $d == 2 )           { return $n . 'nd'; }
	elsif( $d == 3 )           { return $n . 'rd'; }
	else                       { return $n . 'th'; }
}

# ============================================================
sub read_tournament_config {
# ============================================================
	my $php = '';
	my $config = [
		'/home/ubuntu/freescore/trunk/frontend/html/include/php/config.php',
		'/var/www/html/freescore/include/php/config.php',
		'/var/www/html/include/php/config.php',
		'/var/www/freescore/include/php/config.php',
		'/var/www/include/php/config.php',
	];
	foreach my $file (@$config) { next unless -e $file; $php = $file; last; }
	if( ! $php ) { die "Can't find configuration file 'config.php' $!"; }

	my $json = new JSON::XS();
	my $data = `echo \$(cat $php; echo '<?php echo( \$tournament ); ?>') | php`;
	my $config = $json->decode( $data );

	return $config;
}

